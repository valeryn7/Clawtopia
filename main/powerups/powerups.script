-- powerups.script
local function send_current_powerups(self)
	msg.post("powerups#powerups_hud", "set_level_powerups", {
		powerups = self.current_powerups
	})

	for _, type in ipairs(self.current_powerups) do
		if type then
			local data = self.inventory[type] or { count = 0, level = 1 }
			msg.post("powerups#powerups_hud", "update_powerup", {
				type = type,
				count = data.count,
				level = data.level
			})
		end
	end
end

function init(self)
	self.inventory = {
		magnet_grab = { count = 8, level = 1 },
		-- Agregá más powerups si querés testear
		-- slow_time = { count = 2, level = 1 },
		-- xray = { count = 0, level = 1 },
	}

	-- ⚠️ Solo para test manual, en producción se recibe desde el nivel
	self.current_powerups = { "magnet_grab", nil, nil }

	msg.post(".", "acquire_input_focus")
	send_current_powerups(self)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("add_powerup") then
		local type = message.type
		local data = self.inventory[type]
		if data then
			data.count = data.count + 1
		else
			self.inventory[type] = { count = 1, level = 1 }
		end
		msg.post("powerups#powerups_hud", "update_powerup", {
			type = type,
			count = self.inventory[type].count,
			level = self.inventory[type].level
		})

	elseif message_id == hash("powerup_pressed") then
		local type = message.type
		local data = self.inventory[type]
		if data and data.count > 0 then
			data.count = data.count - 1

			msg.post("grid_controller#grid", "activate_powerup", {
				type = type,
				level = data.level
			})

			msg.post("powerups#powerups_hud", "update_powerup", {
				type = type,
				count = data.count,
				level = data.level
			})
		end

	elseif message_id == hash("set_powerups_for_level") then
		self.current_powerups = message.powerups or {}
		send_current_powerups(self)
	end
end

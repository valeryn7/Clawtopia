-- panels_gui.gui_script

local function show_panel(self, panel_node_id)
	gui.set_enabled(gui.get_node(panel_node_id), true)
	gui.set_scale(gui.get_node(panel_node_id), vmath.vector3(1, 1, 1))

	gui.set_enabled(gui.get_node("panel_overlay"), true)
	gui.set_color(gui.get_node("panel_overlay"), vmath.vector4(0, 0, 0, 0.6))

	self.panel_active = true
end

local function hide_panel(self, panel_node_id)
	gui.set_enabled(gui.get_node(panel_node_id), false)
	gui.set_scale(gui.get_node(panel_node_id), vmath.vector3(0.001, 0.001, 1))
end

local function hide_all_panels(self)
	hide_panel(self, "victory_gui")
	hide_panel(self, "defeat_gui")
	gui.set_enabled(gui.get_node("panel_overlay"), false)
	self.panel_active = false
end

function init(self)
	self.panel_active = false
	msg.post(".", "acquire_input_focus")

	hide_panel(self, "victory_gui")
	hide_panel(self, "defeat_gui")
	gui.set_enabled(gui.get_node("panel_overlay"), false)

	self.current_level = 1
end

function on_message(self, message_id, message, sender)
	if message_id == hash("level_completed") then
		print("‚úÖ ¬°VICTORIA!")
		msg.post("claw#claw", "disable_touch")

		self.current_level = message.level or self.current_level

		gui.set_text(gui.get_node("victory_points_label"), tostring(message.points))
		gui.set_text(gui.get_node("victory_level_label"), "Level " .. tostring(self.current_level))

		show_panel(self, "victory_gui")

	elseif message_id == hash("level_failed") then
		print("‚ùå DERROTA")
		msg.post("claw#claw", "disable_touch")

		self.current_level = message.level or self.current_level

		gui.set_text(gui.get_node("defeat_points_label"), tostring(message.points))
		gui.set_text(gui.get_node("defeat_level_label"), "Level " .. tostring(self.current_level))

		show_panel(self, "defeat_gui")
		
	elseif message_id == hash("hide_panels") then
		hide_all_panels(self)

	elseif message_id == hash("set_level") then
		self.current_level = message.level or 1
		gui.set_text(gui.get_node("victory_level_label"), "Level " .. tostring(self.current_level))
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released and self.panel_active then
		local x, y = action.x, action.y

		-- Victory panel buttons
		if gui.pick_node(gui.get_node("victory_next_button"), x, y) then
			print("‚ñ∂Ô∏è Siguiente nivel")
			msg.post("loader_level#loader", "load_next_level")

		elseif gui.pick_node(gui.get_node("victory_restart_button"), x, y) then
			print("üîÅ Reiniciar nivel (victoria)")
			msg.post("loader_level#loader", "restart_level")

			-- Defeat panel buttons
		elseif gui.pick_node(gui.get_node("defeat_restart_button"), x, y) then
			print("üîÅ Reiniciar nivel (derrota)")
			msg.post("loader_level#loader", "restart_level")

		elseif gui.pick_node(gui.get_node("defeat_home_button"), x, y) then
			print("üè† Volver al selector de niveles")
			msg.post("loader_level#loader", "go_to_level_selector")
		end
	end
end

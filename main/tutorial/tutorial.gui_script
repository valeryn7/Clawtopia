local function hide_tutorial(self)
	msg.post("buttons#hud_gui", "show_pause_panel")

	gui.set_enabled(gui.get_node("sprite"), false)
	gui.set_enabled(gui.get_node("close_button"), false)
	gui.set_enabled(gui.get_node("white_pixel"), false)

	self.tutorial_visible = false
	msg.post("grid_controller#grid", "tutorial_hidden")
end

function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_enabled(gui.get_node("sprite"), false)
	gui.set_enabled(gui.get_node("close_button"), false)
	gui.set_enabled(gui.get_node("white_pixel"), false)
	self.tutorial_visible = false
end

function on_message(self, message_id, message)
	if message_id == hash("show_tutorial") then
		msg.post("buttons#hud_gui", "hide_pause_panel")
		local sprite_node = gui.get_node("sprite")

		gui.set_enabled(sprite_node, true)
		gui.set_enabled(gui.get_node("close_button"), true)
		gui.set_enabled(gui.get_node("white_pixel"), true)

		gui.set_scale(sprite_node, vmath.vector3(0.5, 0.5, 1))
		gui.animate(sprite_node, "scale", vmath.vector3(1, 1, 1), gui.EASING_OUTBACK, 0.3)

		self.tutorial_visible = true

	elseif message_id == hash("hide_tutorial") then
		hide_tutorial(self)
	end
end

function on_input(self, action_id, action)
	if self.tutorial_visible and action_id == hash("touch") and action.released then
		msg.post("audio_manager#script", "play_sfx", { sound = hash("sfx_click") })
		hide_tutorial(self)
		return true
	end

	if action_id == hash("touch") and action.released then
		local node = gui.get_node("close_button")
		if gui.pick_node(node, action.x, action.y) then
			gui.animate(node, "scale", vmath.vector3(0.8, 0.8, 1), gui.EASING_OUTQUAD, 0.05, 0, function()
				gui.animate(node, "scale", vmath.vector3(1, 1, 1), gui.EASING_OUTBACK, 0.1)
			end)
			return true
		end
	end
end

local OBJECT_ICON_FACTORY = "#object_icon_factory"
local ABSOLUTE_POSITIONS = require("main.hud.absolute_positions")

function init(self)
	msg.post(".", "acquire_input_focus")
	self.icon_nodes = {}
end

local function clear_icons(self)
	for _, icon in ipairs(self.icon_nodes) do
		if go.exists(icon) then
			go.delete(icon)
		end
	end
	self.icon_nodes = {}
end

local function create_object_icons(self, slot_index, type, required, collected)
	local positions = ABSOLUTE_POSITIONS[slot_index] and ABSOLUTE_POSITIONS[slot_index][required]
	if not positions then
		print("⚠️ No hay posiciones para slot", slot_index, "con", required, "íconos.")
		return
	end

	local scale = (required == 5) and vmath.vector3(0.6, 0.6, 1) or vmath.vector3(1, 1, 1)

	for i = 1, required do
		local pos = positions[i]
		local icon = factory.create(OBJECT_ICON_FACTORY, pos)
		if icon then
			go.set_scale(scale, icon)
			local sprite_url = msg.url(nil, icon, "sprite")
			msg.post(sprite_url, "play_animation", { id = hash(type) })

			-- Todos empiezan grises
			go.set(sprite_url, "tint", vmath.vector4(0.6, 0.6, 0.6, 1))

			table.insert(self.icon_nodes, icon)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("init_goals") then
		clear_icons(self)
		for i, goal in ipairs(message.goals) do
			create_object_icons(self, i, goal.type, goal.required, goal.collected)
		end

	elseif message_id == hash("update_goal") then
		local updated_type = message.type
		local updated_collected = message.collected

		-- Primero, contar cuántos ya están encendidos
		local matching_icons = {}
		for _, icon in ipairs(self.icon_nodes) do
			if go.exists(icon) then
				local sprite_url = msg.url(nil, icon, "sprite")
				local anim = go.get(sprite_url, "animation")
				if anim == hash(updated_type) then
					table.insert(matching_icons, { icon = icon, sprite = sprite_url })
				end
			end
		end

		-- Ordenar por íconos más antiguos primero (opcional)
		-- Activar solo los primeros N según collected
		for i = 1, #matching_icons do
			local item = matching_icons[i]
			local current_tint = go.get(item.sprite, "tint")
			if i <= updated_collected then
				if current_tint.x < 1.0 then
					go.animate(item.sprite, "tint.x", go.PLAYBACK_ONCE_FORWARD, 1.0, go.EASING_INOUTSINE, 0.15)
					go.animate(item.sprite, "tint.y", go.PLAYBACK_ONCE_FORWARD, 1.0, go.EASING_INOUTSINE, 0.15)
					go.animate(item.sprite, "tint.z", go.PLAYBACK_ONCE_FORWARD, 1.0, go.EASING_INOUTSINE, 0.15)

					go.animate(item.icon, "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(1.2, 1.2, 1), go.EASING_OUTSINE, 0.15)
					timer.delay(0.15, false, function()
						go.animate(item.icon, "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(1, 1, 1), go.EASING_INSINE, 0.1)
					end)
				end
			end
		end
	
	end
end
